Useful commands to create branches:
git branch	# List branches in repository
git branch <Branchname>	# create a new branch
git checkout <Branchname>	# Start working on the Branch
git log --all --decorate --oneline --graph	# Graphical scheme of branching tree

Useful commands to merge branches:
git diff <target branch>..<source branch>	# show the changes that will be merged into the current branch
git merge <source branch>	# merge the current branch with the branch where the changes have been performed.
git merge --abort	# stop merging process and don't merge anything
git merge --no-ff <source branch>	# gives the opportunity of a commit message, even though a fast forward merge was done 
git log --merge 	# produces a list of commits that conflict with each other

Useful commands to rebase branches:
git rebase <target branch> # rebases the current branch (source branch) to the tip of the target branch
git rebase -i <target branch> 	# gives the opportunity to clean up commit history before rebasing
git push --force # this will force git to push the altered main branch and overwrites the remote main branch 

Workflow to combine merge and rebase command by generating a temporary branch:
git checkout feature
git checkout -b temporary-branch
git rebase -i main # Clean up the commit history in an interactive session
git checkout main
git merge temporary-branch

Useful commands to delete branches:
git branch --merged	# show which branches are merged together
git branch -d <Branchname>	# delete a branch, but only if it was merged to another branch already
git branch -D <Branchname>	# deletes a branch, no matter if the work was merged already

Other useful commands:
git branch -m <branch>  # rename a branch
git branch -r   # list remote branches
git checkout -b ＜new-branch＞ ＜existing-branch＞	#will create and checkout a new branch from an existing branch

